// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DataAccessLayer.Models
{
    public partial class Project
    {
        public Project()
        {
            Allowance_deductions = new HashSet<Allowance_deduction>();
            AttendanceAutomaticActions = new HashSet<AttendanceAutomaticAction>();
            AttendancePathSetups = new HashSet<AttendancePathSetup>();
            AttendancePaths = new HashSet<AttendancePath>();
            Attendances = new HashSet<Attendance>();
            CheckInOuts = new HashSet<CheckInOut>();
            DateTypeDescs = new HashSet<DateTypeDesc>();
            Days = new HashSet<Day>();
            EMployeeVacationSchedules = new HashSet<EMployeeVacationSchedule>();
            EmployeeAllowances = new HashSet<EmployeeAllowance>();
            EmployeeAttendances = new HashSet<EmployeeAttendance>();
            EmployeeBalances = new HashSet<EmployeeBalance>();
            EmployeeContracts = new HashSet<EmployeeContract>();
            EmployeeDeductions = new HashSet<EmployeeDeduction>();
            EmployeeEducations = new HashSet<EmployeeEducation>();
            EmployeeExperiences = new HashSet<EmployeeExperience>();
            EmployeeGroups = new HashSet<EmployeeGroup>();
            EmployeeLanguages = new HashSet<EmployeeLanguage>();
            EmployeeLeaves = new HashSet<EmployeeLeaf>();
            EmployeeLeavesLogs = new HashSet<EmployeeLeavesLog>();
            EmployeeLoans = new HashSet<EmployeeLoan>();
            EmployeeShifts = new HashSet<EmployeeShift>();
            EmployeeTransactions = new HashSet<EmployeeTransaction>();
            EmployeeVacationLogs = new HashSet<EmployeeVacationLog>();
            EmployeeVacations = new HashSet<EmployeeVacation>();
            Employees = new HashSet<Employee>();
            Groups = new HashSet<Group>();
            Holidays = new HashSet<Holiday>();
            Ids = new HashSet<Id>();
            LookupTables = new HashSet<LookupTable>();
            Months = new HashSet<Month>();
            SettingDetails = new HashSet<SettingDetail>();
            Settings = new HashSet<Setting>();
            ShiftDetails = new HashSet<ShiftDetail>();
            Shifts = new HashSet<Shift>();
            TimeTypes = new HashSet<TimeType>();
            Times = new HashSet<Time>();
            TransactionTypes = new HashSet<TransactionType>();
            Users = new HashSet<User>();
        }

        [Key]
        public int ProjectID { get; set; }
        [StringLength(200)]
        [Unicode(false)]
        public string ProjectName { get; set; }
        [StringLength(200)]
        [Unicode(false)]
        public string CompanyName { get; set; }
        public int? IsActive { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string ReportPath { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string imagepath { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string footertitle1 { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string footertitle2 { get; set; }
        [StringLength(2000)]
        [Unicode(false)]
        public string StartUpProject { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string CurrentCulture { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string CurrentUICulture { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string DateTimeFormat { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string DateSeparator { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string ShortTimePattern { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string ShortDatePattern { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string DateFormatForGrid { get; set; }
        public int? ISDeductLateBreak { get; set; }
        [StringLength(500)]
        [Unicode(false)]
        public string ReportPathEN { get; set; }
        public int? CalLeavesWithVacations { get; set; }
        public int? IsAllowUserTologin { get; set; }
        [StringLength(5000)]
        [Unicode(false)]
        public string AttachementPath { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string CompanyNameEn { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string projectcode { get; set; }
        [MaxLength(1000)]
        public byte[] apiurl { get; set; }

        [InverseProperty("Project")]
        public virtual ICollection<Allowance_deduction> Allowance_deductions { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<AttendanceAutomaticAction> AttendanceAutomaticActions { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<AttendancePathSetup> AttendancePathSetups { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<AttendancePath> AttendancePaths { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Attendance> Attendances { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<CheckInOut> CheckInOuts { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<DateTypeDesc> DateTypeDescs { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Day> Days { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EMployeeVacationSchedule> EMployeeVacationSchedules { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeAllowance> EmployeeAllowances { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeAttendance> EmployeeAttendances { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeBalance> EmployeeBalances { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeContract> EmployeeContracts { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeDeduction> EmployeeDeductions { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeEducation> EmployeeEducations { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeExperience> EmployeeExperiences { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeGroup> EmployeeGroups { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeLanguage> EmployeeLanguages { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeLeaf> EmployeeLeaves { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeLeavesLog> EmployeeLeavesLogs { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeLoan> EmployeeLoans { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeShift> EmployeeShifts { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeTransaction> EmployeeTransactions { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeVacationLog> EmployeeVacationLogs { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<EmployeeVacation> EmployeeVacations { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Employee> Employees { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Group> Groups { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Holiday> Holidays { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Id> Ids { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<LookupTable> LookupTables { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Month> Months { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<SettingDetail> SettingDetails { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Setting> Settings { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<ShiftDetail> ShiftDetails { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Shift> Shifts { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<TimeType> TimeTypes { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<Time> Times { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<TransactionType> TransactionTypes { get; set; }
        [InverseProperty("Project")]
        public virtual ICollection<User> Users { get; set; }
    }
}