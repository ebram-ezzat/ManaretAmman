// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using DataAccessLayer.Models;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace DataAccessLayer.Models
{
    public partial interface IPayrolLogOnlyContextProcedures
    {
        Task<List<ArrangeEMployeeWeeklyHolidayResult>> ArrangeEMployeeWeeklyHolidayAsync(int? pFromDate, int? pToDate, int? pCreatedBy, int? pProjectID, int? pMonthID, int? pYearID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> AutomaticBreakAsync(int? pProjectID, int? MaxDate, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<AutomaticLeaveResult>> AutomaticLeaveAsync(int? pEmployeeID, int? pProjectID, int? pDate, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<CalculateEmployeeSalaryResult>> CalculateEmployeeSalaryAsync(int? pProjectID, int? pEmployeeID, int? pCurrentMonthID, int? pCurrentYearID, int? pFromDate, int? pToDate, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<ChangeEmployeeRequestStatusResult>> ChangeEmployeeRequestStatusAsync(int? pEmployeeID, int? pCreatedBy, int? pApprovalStatusID, int? pApprovalPageID, int? pProjectID, int? pID, int? pPrevilageType, int? pSendToLog, int? pPK, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateClassTemplateAsync(string pTableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> CreateNewProjectAsync(string pUserName, int? pOnlineProjectID, string pPassword, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteAllowance_deductionAsync(int? pAllowanceID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteAttendanceAsync(int? pID, int? pProjectID, int? pEmployeeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteAttendancePathAsync(string pPath, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteAttendancePathSetupAsync(string pIP, int? pProjectID, string pPort, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeAllowancesAsync(int? pEmployeeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeDeductionsAsync(int? pEmployeeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeGroupsAsync(int? pEmployeeGroupID, int? pProjectID, int? pGroupID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeLeavesAsync(int? pEmployeeLeaveID, int? pProjectID, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeLoanAsync(int? pEmployeeLoanID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeOvertimeAsync(int? pEmployeeID, int? pAttendanceDate, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeePaperAsync(int? pEmployeeID, int? pDetailID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<DeleteEmployeesResult>> DeleteEmployeesAsync(int? pEmployeeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeSalaryAsync(int? pEmployeeID, int? pProjectID, int? pCurrentMonthID, int? pCurrentYearID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeShiftByDaysAsync(int? pEmployeeID, int? pFromDate, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeShiftsAsync(int? pEmployeeShiftID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeTransactionAsync(int? pEmployeeTransactionID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeVacationAsync(int? pEmployeeVacationID, int? pProjectID, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteEmployeeVacationScheduleAsync(int? pEmployeeVacationID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteHolidayAsync(int? pHolidayID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteLookupTableAsync(int? pID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteProjectsAsync(int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteScheduleTimeAsync(int? pScheduleTimeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteScheduleTimeDetailAsync(int? pScheduleTimeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteScheduleTimeGroupAsync(int? pScheduleTimeID, int? pGroupID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteSettingDetailsAsync(int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteShiftDetailsAsync(int? pShiftID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteShiftsAsync(int? pShiftID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteTemplateAsync(string pTableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> DeleteUsersAsync(int? pUserID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> FillEmployeeShiftDetailsAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pShiftID, int? pEmployeeShiftID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAllowance_deductionResult>> GetAllowance_deductionAsync(int? pAllowanceID, int? pProjectID, int? pNatureID, string pSearch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAttendanceResult>> GetAttendanceAsync(int? pID, int? pProjectID, int? pFromDate, int? pEmployeeID, int? pFlag, int? pToDate, int? pLanguageID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAttendanceAutomaticActionTypeResult>> GetAttendanceAutomaticActionTypeAsync(int? pProjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAttendancePathResult>> GetAttendancePathAsync(int? pID, int? pProjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAttendancePathSetupResult>> GetAttendancePathSetupAsync(int? pID, int? pProjectID, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetAutomaticAttendanceActioonsResult>> GetAutomaticAttendanceActioonsAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pActionTypeID, int? pIsSolved, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> GetCodeAsync(string pTableName, string pColumnName, int? pProjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAllowancesResult>> GetEmployeeAllowancesAsync(int? pEmployeeAllowanceID, int? pProjectID, int? pEmployeeID, int? pNatureID, int? pLanguageID, int? pFlag, int? pAllowanceID, int? pFromDate, int? pToDate, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeApprovalsResult>> GetEmployeeApprovalsAsync(int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pLanguageID, int? pDirectSupervisorID, int? pStatusID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAttendanceResult>> GetEmployeeAttendanceAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pYearID, int? pVacationTypeID, int? pFlag, int? pDepartmentID, int? pLanguageID, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAttendanceByHoursResult>> GetEmployeeAttendanceByHoursAsync(int? pEmployeeID, int? pAttendnaceDate, int? pFromDate, int? pToDate, int? pProjectID, int? pLanguageID, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAttendanceDailyResult>> GetEmployeeAttendanceDailyAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pFlag, int? pLanguageID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAttendanceDailyAbsentResult>> GetEmployeeAttendanceDailyAbsentAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pFlag, int? pLanguageID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAttendanceDailyAdditionalResult>> GetEmployeeAttendanceDailyAdditionalAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pFlag, int? pLanguageID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAttendanceDailyBreakResult>> GetEmployeeAttendanceDailyBreakAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pFlag, int? pLanguageID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAttendanceDailyLateResult>> GetEmployeeAttendanceDailyLateAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pFlag, int? pLanguageID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeAttendanceDailyMissingCheckOutResult>> GetEmployeeAttendanceDailyMissingCheckOutAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pFlag, int? pLanguageID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeBalanceResult>> GetEmployeeBalanceAsync(int? pEmployeeID, int? pYearID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeBalanceReportResult>> GetEmployeeBalanceReportAsync(int? pEmployeeID, int? pYearID, int? pProjectID, int? pFlag, int? pLanguageID, int? pVacationTypeID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeContractsResult>> GetEmployeeContractsAsync(int? pContractID, int? pContractTypeID, int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeDeductionsResult>> GetEmployeeDeductionsAsync(int? pEmployeeDeductionID, int? pProjectID, int? pEmployeeID, int? pNatureID, int? pFlag, int? pAllowanceID, int? pFromDate, int? pToDate, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeEndContractReportResult>> GetEmployeeEndContractReportAsync(int? pProjectID, int? pEmployeeID, int? pFlag, int? pLanguageID, int? pFromDate, int? pToDate, int? pFromPeriod, int? pToPeriod, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeGroupsResult>> GetEmployeeGroupsAsync(int? pEmployeeGroupID, int? pEmployeeID, int? pProjectID, int? pGroupID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeHolidayResult>> GetEmployeeHolidayAsync(int? pEmployeeID, int? pMonthID, int? pYearID, int? pProjectID, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeHRServiceResult>> GetEmployeeHRServiceAsync(int? pEmployeeHRServiceID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pStatusID, int? pLanguageID, int? pHRServiceID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeHRServiceReportResult>> GetEmployeeHRServiceReportAsync(int? pEmployeeHRServiceID, int? pEmployeeID, int? pProjectID, int? pLanguageID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeInjuryResult>> GetEmployeeInjuryAsync(int? pEmployeeInjuryID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pStatusID, int? pLanguageID, int? pInjuryID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeInjuryReportResult>> GetEmployeeInjuryReportAsync(int? pEmployeeInjuryID, int? pEmployeeID, int? pProjectID, int? pLanguageID, int? pInjuryID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeLeaveReportResult>> GetEmployeeLeaveReportAsync(int? pEmployeeID, int? pFromDate, int? pToDate, int? pProjectID, int? pFlag, int? pLanguageID, int? pCreatedBy, int? pVacationTypeID, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeLeavesResult>> GetEmployeeLeavesAsync(int? pEmployeeLeaveID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pLeaveTypeID, int? pLanguageID, int? pDirectSupervisorID, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeLoanResult>> GetEmployeeLoanAsync(int? pEmployeeLoanID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pLanguageID, int? pLoanTypeID, int? pFlag, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeLoanReportResult>> GetEmployeeLoanReportAsync(int? pEmployeeLoanID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pLanguageID, int? pLoanTypeID, int? pFlag, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeLoanReportTotalsResult>> GetEmployeeLoanReportTotalsAsync(int? pEmployeeLoanID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pLanguageID, int? pLoanTypeID, int? pFlag, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeNotificationsResult>> GetEmployeeNotificationsAsync(int? pProjectID, int? pEmployeeID, int? pNatureID, int? pNotificationID, int? pFromDate, int? pToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeOvertimeResult>> GetEmployeeOvertimeAsync(int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeePaperResult>> GetEmployeePaperAsync(int? pEmployeeID, int? pDetailID, int? pFlag, int? pLanguageID, int? pPaperID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeePenaltyResult>> GetEmployeePenaltyAsync(int? pEmployeePenaltyID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pStatusID, int? pLanguageID, int? pPenaltyID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeePenaltyReportResult>> GetEmployeePenaltyReportAsync(int? pEmployeePenaltyID, int? pEmployeeID, int? pProjectID, int? pLanguageID, int? pPenaltyID, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeReportResult>> GetEmployeeReportAsync(int? pProjectID, int? pEmployeeID, int? pFlag, int? pLanguageID, int? pCreatedBy, int? pFromDate, int? pToDate, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeesResult>> GetEmployeesAsync(int? pProjectID, int? pStatusID, int? pEmployeeID, string pSearch, int? psupervisorid, int? pLoginUserID, int? pCreatedBy, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeSalaryResult>> GetEmployeeSalaryAsync(int? pProjectID, int? pEmployeeID, int? pStatusID, int? pTypeID, int? pCurrentYearID, int? pCurrentMonthID, int? pLanguageID, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeSalaryReportResult>> GetEmployeeSalaryReportAsync(int? pProjectID, int? pEmployeeID, int? pCurrentYearID, int? pCurrentMonthID, int? pIsAllEmployees, int? pWIthDetail, int? pLanguageID, int? pCreatedBy, int? pFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeSalaryReport2Result>> GetEmployeeSalaryReport2Async(int? pProjectID, int? pCurrentYearID, int? pCurrentMonthID, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeShiftCheckResult>> GetEmployeeShiftCheckAsync(int? pProjectID, int? pEmployeeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeShiftsResult>> GetEmployeeShiftsAsync(int? pEmployeeShiftID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeTransactionResult>> GetEmployeeTransactionAsync(int? pEmployeeTransactionID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pFlag, int? pTransactionTypeID, int? pLanguageID, int? pCreatedBy, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeVacationResult>> GetEmployeeVacationAsync(int? pEmployeeVacationID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pLanguageID, int? pDirectSupervisorID, int? pCreatedBy, int? pVacationTypeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeVacationReportResult>> GetEmployeeVacationReportAsync(int? pEmployeeVacationID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pFlag, int? pCreatedBy, int? pvacationTypeID, int? pDepartmentID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEmployeeVacationScheduleResult>> GetEmployeeVacationScheduleAsync(int? pEmployeeVacationID, int? pEmployeeID, int? pProjectID, int? pFromDate, int? pToDate, int? pLanguageID, int? pDirectSupervisorID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetEMployeeWeeklyHolidayResult>> GetEMployeeWeeklyHolidayAsync(int? pEmployeeID, int? pMonthID, int? pYearID, int? pDayID, int? pProjectID, int? pLoginUserID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetGroupsResult>> GetGroupsAsync(int? pGroupID, int? pProjectID, string pSearch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetHolidayResult>> GetHolidayAsync(int? pHolidayID, int? pProjectID, int? pFromDate, int? pToDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetIdsResult>> GetIdsAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetLookupTableResult>> GetLookupTableAsync(int? pID, int? pProjectID, int? pParentID, string pTableName, string pColumnName, int? pLanguageID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetProjectFeaturesResult>> GetProjectFeaturesAsync(int? pProjectID, int? pFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetProjectsResult>> GetProjectsAsync(int? pProjectID, int? pFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetRemindersResult>> GetRemindersAsync(int? pProjectID, int? pEmployeeID, int? pFlag, int? pLanguageID, int? pFromDate, int? pToDate, int? pTypeID, int? pUserID, int? pUserTypeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetScheduleTimeResult>> GetScheduleTimeAsync(int? pScheduleTimeID, int? pDoorID, int? pProjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetScheduleTimeDetailResult>> GetScheduleTimeDetailAsync(int? pScheduleTimeID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetScheduleTimeGroupResult>> GetScheduleTimeGroupAsync(int? pScheduleTimeID, int? pGroupID, int? pProjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetSettingDetailsResult>> GetSettingDetailsAsync(int? pProjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetSettingsResult>> GetSettingsAsync(int? pProjectID, int? pFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetShiftAllowanceResult>> GetShiftAllowanceAsync(int? pShiftID, int? pAllowanceID, int? pProjectID, int? pFlag, int? pStartDate, int? pEndDate, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetShiftDetailsResult>> GetShiftDetailsAsync(int? pShiftID, int? pDayID, int? pProjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetShiftsResult>> GetShiftsAsync(int? pShiftID, int? pProjectID, string pSearch, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> GetTemplateAsync(string pTableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<GetUsersResult>> GetUsersAsync(int? pUserID, int? pProjectID, string pUserName, string pUserPassword, int? pUserTypeID, string pBiosID, int? pFlag, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertAllowance_deductionAsync(string pDefaultDesc, int? pTypeID, decimal? pAmount, int? pCalculateTypeID, int? pNatureID, int? pIsDefault, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pAllowanceID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertAttendanceResult>> InsertAttendanceAsync(int? pAttDate, string pType, int? pEmployeeID, int? pStatusID, int? pattdateint, int? pProjectID, DateTime? pDatetime, OutputParameter<int?> pID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertAttendancePathAsync(string ppath, int? pProjectID, OutputParameter<int?> pID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertAttendancePathSetupAsync(string pIP, string pPort, string pUserName, string pPassword, string pWindowsVersion, string pTypeDesc, string pMaxLogID, string pMaxLogDate, int? pProjectID, string pMachineNumber, string pMachineName, int? pDeviceModel, int? pCreatedBy, OutputParameter<int?> pID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertAutomaticAttendanceActionsResult>> InsertAutomaticAttendanceActionsAsync(int? pEmployeeID, int? pVacationTypeID, int? pActionTypeID, int? pAttendanceDate, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertEmployeeAttendanceAsync(int? pEmployeeID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertEmployeeAttendanceByHoursAsync(int? pShiftID1, int? pShiftID2, int? pShiftID3, int? pWorkingHours1, int? pCreatedBy, int? pIsWorkigDay, int? pWorkingHours2, int? pWorkingHours3, OutputParameter<int?> pEmployeeID, OutputParameter<int?> pAttendanceDate, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertEmployeeBalanceAsync(int? pCurrentBalance, int? pPreviousBalance, int? pCreatedBy, int? pActualBalance, OutputParameter<int?> pEmployeeID, OutputParameter<int?> pYearID, OutputParameter<int?> pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertEmployeeContractsAsync(int? pStartDate, int? pEndDate, int? pEmployeeID, decimal? pSalary, int? pCreatedBy, decimal? pSocialSecuritySalary, int? pProjectID, int? pIsDailyWork, int? pContractTypeID, int? pincometaxtype, int? pCompanyID, OutputParameter<int?> pContractID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertEmployeeHolidayResult>> InsertEmployeeHolidayAsync(string pEmployeeID, string pDayID, int? pMonthID, int? pYearID, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertEmployeePaperAsync(int? pEmployeeID, int? pPaperID, string pPaperPath, string pNotes, int? pCratedBy, OutputParameter<int?> pDetailID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertEmployeesAsync(string pEmployeeName, string pEmployeeNumber, int? pStatusID, int? pSettingID, int? pCreatedBy, string pNationalId, string pSocialNumber, string pCareerNumber, string pJobTitleName, int? pBirthDate, int? pGenderID, int? pNationalityID, string pMobileNo, string pEmailNo, int? pMaritalStatusID, string pEmergencyCallName, string pEmergencyCallMobile, string pAccountNo, string pIBAN, int? pBankID, int? pBranchID, string pEmployeeImage, int? pProjectID, int? pHasBreak, int? pStartDate, int? pDepartmentID, string pUserName, string pPassword, int? pSSNType, int? pIsDynamicShift, string pEmployeeNameEn, int? pIsMilitary, int? pJobTitleID, int? pSectionID, string pEmergencyCallMobile2, string pEmergencyCallName2, int? pDateForMozawleh, OutputParameter<int?> pEmployeeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertEmployeeSalaryAsync(int? pEmployeeID, int? pCurrentYearID, int? pCurrentMonthID, int? pTypeID, int? pSubTypeID, decimal? pAmount, int? pFromDate, int? pToDate, int? pStatusID, int? pCalculationDate, int? pCreatedBy, decimal? pAdditionalInWork, decimal? pAdditionalInHoliday, decimal? pmorninglate, int? pworkingdays, int? pmonthdays, int? pmissingcheckin, int? pmissingcheckout, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertEMployeeWeeklyHolidayResult>> InsertEMployeeWeeklyHolidayAsync(int? pEmployeeID, int? pMonthID, int? pYearID, string pDayID, string pStatusID, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertLookupTableResult>> InsertLookupTableAsync(string pTableName, string pColumnName, string pColumnValue, string pColumnDescription, int? pOrderBy, int? pBalance, int? pDefaultValue, int? pParentID, int? pProjectID, int? pEmployeeID, int? pCalWithHoliday, int? pIsHealthVacation, int? pIsInjuryVacation, int? pApprovalProcessID, int? pFirstPeriod, int? pSecondPeriod, int? pThirdPeriod, int? pFourthPeriod, int? pFifthPeriod, int? pPenaltyCategoryID2, int? pPenaltyCategoryID3, int? pPenaltyCategoryID4, int? pPenaltyCategoryID5, int? pIsWithoutSalaryVacation, int? pIsPersonalVacation, decimal? pWithoutSalaryVacationValue, OutputParameter<int?> pID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertProjectsAsync(string pProjectName, string pCompanyName, int? pIsActive, string pReportPath, string pimagepath, string pfootertitle1, string pfootertitle2, OutputParameter<int?> pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertScheduleTimeAsync(int? pDoorID, string pDescription, int? pCreatedBy, int? pSuturday, int? pSunday, int? pMonday, int? pTueseday, int? pWhednesday, int? pThursday, int? pfriday, int? pProjectID, int? pStatusID, OutputParameter<int?> pScheduleTimeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertScheduleTimeDetailAsync(int? pDayID, int? pDetailID, int? pFromTime, int? ptotime, OutputParameter<int?> pScheduleTimeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertScheduleTimeGroupAsync(int? pcreatedby, OutputParameter<int?> pScheduleTimeID, OutputParameter<int?> pGroupID, OutputParameter<int?> pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertSettingDetailsResult>> InsertSettingDetailsAsync(int? pDayID, int? pStartTime, int? pEndTime, int? pIsWorkingDay, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertSettingsResult>> InsertSettingsAsync(int? pSettingID, decimal? pAdditionalInWork, decimal? pAdditionalInHoliday, int? pCalculateAdditionalIfExceed, decimal? pSocialSecurityAllowanceID, int? pCalLeavesFromSalary, int? pCalLateAsAdditional, int? pDailyWorkInMinutes, int? pStartTimeINMinutes, int? pEndTimeInMinutes, int? pAllowedLate, int? pNoOfDaysBerMonth, int? pWithMorningExtra, int? pCheckoutAfterMidNight, int? pAllowedLateInLeave, int? pActiveYear, int? pDependOnCheckType, int? pCreatedBy, DateTime? pCreationDate, int? pModifiedBy, DateTime? pModificationDate, int? pAdditionalAllowanceID, int? pPersonalVacationID, string pMonthID, int? pLastCalculationDate, int? pGlobalLocal, int? pTest, int? pWithBreak, int? pbreaktime, int? pProjectID, int? pLateDeductType, decimal? pLateDeductPercentage, decimal? pCompanySharePercent, int? pBreakFrom, int? pBreakTo, int? pEarlyLeaveDeductPercentage, int? pISDynamicShift, decimal? pSocialSecurityAmount2, decimal? pCompanySharePercent2, int? pMissingCheckoutValue, int? pExtraDaysWillBeAddedToSalry, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<InsertShiftAllowanceResult>> InsertShiftAllowanceAsync(int? pProjectID, int? pShiftID, int? pAllowanceID, int? pStartDate, int? pEndDate, int? pStatusID, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int?> pAllowanceShiftID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertShiftDetailsAsync(int? pShiftID, int? pDayID, int? pStartTime, int? pEndTime, int? pIsWorkingDay, int? pCreatedBy, int? pIsCalculated, int? pProjectID, int? pBreakDay, int? pBreakEndTime, int? pBreakStartTime, int? pRamadanDay, int? pRamadanStartTime, int? pRamadanEndTime, int? pRamadanStartTimeRest, int? pRamadanEndTimeRest, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertTemplateAsync(string pTableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> InsertUsersAsync(string pUserName, string pUserPassword, int? pProjectID, int? pFromOtherProcedure, OutputParameter<int?> pUserID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Online_GetprojectsResult>> Online_GetprojectsAsync(string pvalidateid, string pValidateType, int? pStatusID, int? pProjectID, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Online_InsertprojectsAsync(string pProjectName, byte[] pProjectLogo, int? pStatusid, string pTypeDesc, string pvalidatetype, string pvalidateid, DateTime? pvalidateperidFrom, DateTime? pvalidateperiodto, string pCreatedby, DateTime? pcreationdate, string pacceptedby, DateTime? paccepteddate, OutputParameter<int?> pProjectId, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<Online_SaveprojectsResult>> Online_SaveprojectsAsync(string pProjectName, byte[] pProjectLogo, int? pStatusid, string pTypeDesc, string pvalidatetype, string pvalidateid, DateTime? pvalidateperidFrom, DateTime? pvalidateperiodto, string pCreatedby, DateTime? pcreationdate, string pacceptedby, DateTime? paccepteddate, string pUserPassword, string pFooterTitle1, int? pDependOnCheckType, int? pTypeID, string pNewUserName, string pEmail, string pPhone, string pPassword, int? pProjectIdFromOnline, OutputParameter<int?> pProjectId, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> Online_UpdateImageAsync(byte[] pImagePath, string pValidateID, int? pProjectID, string pImageName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RefreshEmployeeAttendanceResult>> RefreshEmployeeAttendanceAsync(int? pAgain, int? pEmployeeID, int? pProjectID, int? pCheckIn, int? pCheckOut, int? pAttendanceDate, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<RefreshEmployeeAttendanceTest20221107Result>> RefreshEmployeeAttendanceTest20221107Async(int? pAgain, int? pEmployeeID, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveAllowance_DeductionResult>> SaveAllowance_DeductionAsync(string pDefaultDesc, int? pTypeID, decimal? pAmount, int? pCalculateTypeID, int? pNatureID, int? pIsDefault, int? pCreatedBy, int? pProjectID, int? pCalculateWithOvertime, int? pCalculateWithAttendanceDeduction, OutputParameter<int?> pAllowanceID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveAttendanceAsync(string pstuTime, string pszUserID, string pemAttendanceState, int? pmaxLogID, string pMaxLogDate, int? pProjectID, string pUserIDs, string pInOutModes, string pYears, string pMonths, string pDays, string pHours, string pMinutes, int? pFlag, string pIP, string pPort, OutputParameter<string> pRecno, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveEmployeeAdditionalInfoAsync(int? pStatusID, int? pSettingID, int? pCreatedBy, string pNationalId, string pSocialNumber, string pCareerNumber, string pJobTitleName, int? pBirthDate, int? pGenderID, int? pNationalityID, string pMobileNo, string pEmailNo, int? pMaritalStatusID, string pEmergencyCallName, string pEmergencyCallMobile, string pAccountNo, string pIBAN, int? pBankID, int? pBranchID, string pEmployeeImage, int? pProjectID, int? pHasBreak, int? pStartDate, int? pDepartmentID, string pUserName, string pPassword, int? pSSNType, int? pIsDynamicShift, int? pReligionID, int? pFamilyCount, string pPermitNo, int? pPermitEndDate, OutputParameter<int?> pEmployeeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeAllowancesResult>> SaveEmployeeAllowancesAsync(int? pEmployeeID, int? pStartDate, int? pEndDate, int? pAllowanceID, int? pCreatedBy, int? pProjectID, decimal? pAmount, int? pCalculatedWithOverTime, OutputParameter<int?> pEmployeeAllowanceID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveEmployeeContractsAsync(int? pContractTypeID, int? pProjectID, int? pEmployeeID, int? pStatusID, int? pCreatedBy, decimal? pContractEndDate, int? pContractConfirmDate, int? pContractFromDate, int? pContractStartDate, int? pCompanyID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveEmployeeDeductionsAsync(int? pEmployeeID, int? pStartDate, int? pEndDate, int? pDeductionID, int? pCreatedBy, int? pProjectID, decimal? pAmount, OutputParameter<int?> pEmployeeDeductionID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeFromDeviceResult>> SaveEmployeeFromDeviceAsync(string pstuName, string pszUserID, int? pProjectID, OutputParameter<string> pRecno, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeGeneralInfoResult>> SaveEmployeeGeneralInfoAsync(string pEmployeeName, string pEmployeeNumber, int? pStatusID, int? pSettingID, int? pCreatedBy, int? pNationalId, string pSocialNumber, string pCareerNumber, string pJobTitleName, int? pBirthDate, int? pGenderID, int? pNationalityID, string pMobileNo, string pEmailNo, int? pMaritalStatusID, string pEmergencyCallName, string pEmergencyCallMobile, string pAccountNo, string pIBAN, int? pBankID, int? pBranchID, string pEmployeeImage, int? pProjectID, int? pHasBreak, int? pContractID, int? pStartDate, int? pEndDate, decimal? pSalary, decimal? pSocialSecuritySalary, int? pCurrentBalance, int? pPreviousBalance, int? pActualBalance, OutputParameter<int?> pEmployeeID, OutputParameter<int?> pYearID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveEmployeeGroupsAsync(int? pEmployeeID, int? pGroupID, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pEmployeeGroupID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveEmployeeHRServiceAsync(int? pEmployeeHRServiceID, int? pEmployeeID, int? pHRServiceID, int? pMonthID, int? pHRServiceDate, string pReasonDesc, int? pCreatedBy, int? pStatusID, int? pYearID, int? pBankID, int? pBranchID, string pServiceText, string pAttachmentDesc, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveEmployeeInjuryAsync(int? pEmployeeInjuryID, int? pEmployeeID, int? pInjuryID, int? pDayCount, int? pInjuryDate, string pReasonDesc, int? pCreatedBy, int? pStatusID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeLeavesResult>> SaveEmployeeLeavesAsync(int? pEmployeeID, int? pLeaveTypeID, int? pLeaveDate, int? pFromTime, int? pToTime, int? pCreatedBy, int? pBySystem, int? pProjectID, int? pPrevilageType, OutputParameter<int?> pEmployeeLeaveID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeLoanResult>> SaveEmployeeLoanAsync(int? pEmployeeID, int? pLoanDate, decimal? pLoanAmount, string pNotes, int? pCreatedBy, int? pProjectID, int? ploantypeid, int? pPrevilageType, OutputParameter<int?> pEmployeeLoanID, OutputParameter<int?> pError, OutputParameter<int?> pLoanSerial, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveEmployeeOvertimeAsync(int? pEmployeeID, int? pAttendanceDate, int? pTotalHours, string pNotes, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveEmployeePenaltyAsync(int? pEmployeePenaltyID, int? pEmployeeID, int? pPenaltyID, int? pDayCount, int? pPenaltyDate, string pReasonDesc, int? pCreatedBy, int? pStatusID, int? pAppliedPenaltyCategoryTypeID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeShiftsResult>> SaveEmployeeShiftsAsync(int? pEmployeeID, int? pShiftID, int? pFromDate, int? pToDate, int? pCreatedBy, int? pProjectID, int? pIsCalledFromOtherSP, OutputParameter<int?> pEmployeeShiftID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeTransactionResult>> SaveEmployeeTransactionAsync(int? pEmployeeID, int? pTransactionDate, int? pTransactionTypeID, int? pTransactionInMinutes, string pNotes, int? pCreatedBy, int? pBySystem, int? pRelatedToDate, int? pProjectID, OutputParameter<int?> pEmployeeTransactionID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeTransactionAutoResult>> SaveEmployeeTransactionAutoAsync(int? pEmployeeID, int? pTransactionDate, int? pTransactionTypeID, int? pTransactionInMinutes, string pNotes, int? pCreatedBy, int? pBySystem, int? pRelatedToDate, int? pProjectID, OutputParameter<int?> pEmployeeTransactionID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeVacationResult>> SaveEmployeeVacationAsync(int? pEmployeeID, int? pVacationTypeID, int? pFromDate, int? pToDate, string pNotes, int? pDayCount, int? pCreatedBy, int? pProjectID, int? pIsCalledFromOtherSP, int? pPrevilageType, OutputParameter<int?> pEmployeeVacationID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveEmployeeVacationScheduleResult>> SaveEmployeeVacationScheduleAsync(int? pEmployeeID, int? pVacationTypeID, int? pFromDate, int? pToDate, string pNotes, int? pDayCount, int? pCreatedBy, int? pProjectID, int? pIsCalledFromOtherSP, int? pPrevilageType, OutputParameter<int?> pEmployeeVacationID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveGroupsAsync(string pGroupName, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pGroupID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveHolidayAsync(int? pHolidayTypeID, int? pFromDate, int? pToDate, string pNotes, int? pCreatedBy, int? pProjectID, OutputParameter<int?> pHolidayID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SaveIDsResult>> SaveIDsAsync(int? pProjectID, string pValidatePeriod, string pValidateID, string pValidateType, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveProjectFeaturesAsync(int? pCreatedBy, int? pProjectID, int? pIsChecked, int? pAllowedNumber, OutputParameter<int?> pFeatureID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveReminderAsync(int? pPK, int? pEmployeeID, int? pTypeID, int? pEndDate, string pNotes, int? pCreatedBy, int? pProjectID, int? pFromFromApprovalProcessID, int? pToFromApprovalProcessID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> SaveShiftsAsync(string pShiftName, int? pAllowedLate, int? pCheckOutAfterMidNight, int? pMorningAttendanceasAdditional, int? pCalculateAdditionalIfExceed, int? pFixedDayID, int? pShiftDays, int? pCreatedBy, int? pProjectID, int? pOvertime, int? pStatusID, int? pEarlyLeave, int? pAllowedAdditionalBefore, int? pShouldCheckIn, int? pAllowedLatetooverride, int? pCheckoutShouldbeBefore, decimal? pAdditionalInWork, decimal? pAdditionalInHoliday, int? pIsActiveBreak, int? pBreakPeriod, int? pBreakTypeID, int? pIsBreakWillBeAddedToEndtime, int? pIsDynamicShift, int? pShiftDailyWorkInMinutes, int? pShiftNoOfDaysBerMonth, int? pShiftAllowedMonthlyVacation, int? pWorkingPeriod, int? pShouldCheckout, decimal? pStaticOvertime, decimal? pHourRate, int? pStartDate, int? pEndDate, int? pRamadanActivate, int? pRamadanStartDate, int? pRamadanEndDate, OutputParameter<int?> pShiftID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<TarheelEmployeeBalanceResult>> TarheelEmployeeBalanceAsync(int? pYearID, int? pProjectID, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateAllowance_deductionAsync(int? pAllowanceID, string pDefaultDesc, int? pTypeID, decimal? pAmount, int? pCalculateTypeID, int? pNatureID, int? pIsDefault, int? pModifiedBy, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateAttendanceAsync(int? pID, DateTime? pAttDate, string pType, int? pEmployeeID, int? pStatusID, int? pattdateint, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateEmployeeAttendanceResult>> UpdateEmployeeAttendanceAsync(int? pEmployeeID, int? pAttendanceDate, int? pCheckIn, int? pCheckOut, int? pWeekDayID, int? pCreatedBy, int? pBreakIn, int? pBreakOut, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<UpdateEmployeeAttendance2Result>> UpdateEmployeeAttendance2Async(int? pID, int? pAttendanceDate, int? pEmployeeID, int? pProjectID, int? pTypeID, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateEmployeeHRServiceAsync(int? pEmployeeHRServiceID, int? pEmployeeID, int? pStatusID, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateEmployeeInjuryAsync(int? pEmployeeInjuryID, int? pEmployeeID, int? pStatusID, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateEmployeePenaltyAsync(int? pEmployeePenaltyID, int? pEmployeeID, int? pStatusID, int? pCreatedBy, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdatePasswordAsync(int? pUserID, string pUserPassword, string pOldPassword, int? pProjectID, int? pWithOldPassword, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateProjectsAsync(int? pProjectID, string pProjectName, string pCompanyName, int? pIsActive, string pReportPath, string pimagepath, string pfootertitle1, string pfootertitle2, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateReminderAsync(int? pID, int? pCreatedBy, int? pProjectID, int? pPK, int? pTypeID, int? pUserID, int? pFlag, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateSettingsAsync(int? pSettingID, decimal? pAdditionalInWork, decimal? pAdditionalInHoliday, int? pCalculateAdditionalIfExceed, decimal? pSocialSecurityAllowanceID, int? pCalLeavesFromSalary, int? pCalLateAsAdditional, int? pDailyWorkInMinutes, int? pStartTimeINMinutes, int? pEndTimeInMinutes, int? pAllowedLate, int? pNoOfDaysBerMonth, int? pWithMorningExtra, int? pCheckoutAfterMidNight, int? pAllowedLateInLeave, int? pActiveYear, int? pDependOnCheckType, int? pCreatedBy, DateTime? pCreationDate, int? pModifiedBy, DateTime? pModificationDate, int? pAdditionalAllowanceID, int? pPersonalVacationID, string pMonthID, int? pLastCalculationDate, int? pGlobalLocal, int? pTest, int? pWithBreak, int? pbreaktime, int? pProjectID, int? pLateDeductType, decimal? pLateDeductPercentage, decimal? pCompanySharePercent, int? pBreakFrom, int? pBreakTo, int? pEarlyLeaveDeductType, decimal? pEarlyLeaveDeductPercentage, string pFooterTitle1, string pProjectName, int? ptimeZone, int? pIsDynamicShift, decimal? pSocialSecurityAmount2, decimal? pCompanySharePercent2, int? pAllowedMonthlyLeaves, int? pMissingCheckoutValue, int? pLeaveWillDeductFromSalary, int? pAllowedMonthlyVacation, decimal? pVacationDeductPercentage, int? pExtraDaysWillBeAddedToSalry, int? pAllowMultiCheckIn, int? pViewSocialSecurity, decimal? pSocialSecurityAmount3, decimal? pCompanySharePercent3, decimal? pLoanPercentage, int? pMainBankID, string pHrManager, string pcheckin, string pcheckout, string pBreakin, string pBreakOut, int? pCompanyMayCLose, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateTemplateAsync(string pTableName, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> UpdateUsersAsync(int? pUserID, string pUserName, string pUserPassword, int? pProjectID, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<int> ValidateUserAsync(string pUserName, DateTime? pValidateFrom, DateTime? pValidateTo, OutputParameter<int?> pError, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
