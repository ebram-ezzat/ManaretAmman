// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace DataAccessLayer.Models
{
    [Index("ProjectID", Name = "IX_Employees_E1")]
    [Index("EmployeeNumber", Name = "IX_Employees_E2")]
    public partial class Employee
    {
        public Employee()
        {
            AttendanceAutomaticActions = new HashSet<AttendanceAutomaticAction>();
            Attendances = new HashSet<Attendance>();
            EMployeeVacationSchedules = new HashSet<EMployeeVacationSchedule>();
            EMployeeWeeklyHolidays = new HashSet<EMployeeWeeklyHoliday>();
            EmployeeAllowances = new HashSet<EmployeeAllowance>();
            EmployeeAttendance2s = new HashSet<EmployeeAttendance2>();
            EmployeeAttendances = new HashSet<EmployeeAttendance>();
            EmployeeBalances = new HashSet<EmployeeBalance>();
            EmployeeContracts = new HashSet<EmployeeContract>();
            EmployeeDeductions = new HashSet<EmployeeDeduction>();
            EmployeeEducations = new HashSet<EmployeeEducation>();
            EmployeeExperiences = new HashSet<EmployeeExperience>();
            EmployeeGroups = new HashSet<EmployeeGroup>();
            EmployeeHolidays = new HashSet<EmployeeHoliday>();
            EmployeeLanguages = new HashSet<EmployeeLanguage>();
            EmployeeLeaves = new HashSet<EmployeeLeaf>();
            EmployeeLeavesLogs = new HashSet<EmployeeLeavesLog>();
            EmployeeLoans = new HashSet<EmployeeLoan>();
            EmployeeOverTimes = new HashSet<EmployeeOverTime>();
            EmployeePapers = new HashSet<EmployeePaper>();
            EmployeeShiftChecks = new HashSet<EmployeeShiftCheck>();
            EmployeeShiftDetails = new HashSet<EmployeeShiftDetail>();
            EmployeeShifts = new HashSet<EmployeeShift>();
            EmployeeTransactions = new HashSet<EmployeeTransaction>();
            EmployeeVacationLogs = new HashSet<EmployeeVacationLog>();
            EmployeeVacations = new HashSet<EmployeeVacation>();
        }

        [Key]
        public int EmployeeID { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string EmployeeName { get; set; }
        public int? EmployeeNumber { get; set; }
        public int? StatusID { get; set; }
        public int? SettingID { get; set; }
        public int? CreatedBy { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? CreationDate { get; set; }
        public int? ModifiedBy { get; set; }
        [Column(TypeName = "datetime")]
        public DateTime? ModificationDate { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string NationalId { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string SocialNumber { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string CareerNumber { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string JobTitleName { get; set; }
        public int? BirthDate { get; set; }
        public int? GenderID { get; set; }
        public int? NationalityID { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string MobileNo { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string EmailNo { get; set; }
        public int? MaritalStatusID { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string EmergencyCallName { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string EmergencyCallMobile { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string AccountNo { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string IBAN { get; set; }
        public int? BankID { get; set; }
        public int? BranchID { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string EmployeeImage { get; set; }
        public int ProjectID { get; set; }
        public int? HasBreak { get; set; }
        public int? DepartmentID { get; set; }
        public int? UserID { get; set; }
        public int? SSNType { get; set; }
        public int? IsDynamicShift { get; set; }
        [StringLength(1000)]
        [Unicode(false)]
        public string EmployeeNameEn { get; set; }
        public int? ViewSocialSecurity { get; set; }
        public int? ReligionID { get; set; }
        public int? FamilyCount { get; set; }
        [StringLength(100)]
        [Unicode(false)]
        public string PermitNo { get; set; }
        public int? PermitEndDate { get; set; }
        public int? IsMilitary { get; set; }
        public int? JobTitleID { get; set; }
        public int? SectionID { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string EmergencyCallMobile2 { get; set; }
        [StringLength(50)]
        [Unicode(false)]
        public string EmergencyCallName2 { get; set; }
        public int? DateForMozawleh { get; set; }

        [ForeignKey("ProjectID")]
        [InverseProperty("Employees")]
        public virtual Project Project { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<AttendanceAutomaticAction> AttendanceAutomaticActions { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<Attendance> Attendances { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EMployeeVacationSchedule> EMployeeVacationSchedules { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EMployeeWeeklyHoliday> EMployeeWeeklyHolidays { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeAllowance> EmployeeAllowances { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeAttendance2> EmployeeAttendance2s { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeAttendance> EmployeeAttendances { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeBalance> EmployeeBalances { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeContract> EmployeeContracts { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeDeduction> EmployeeDeductions { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeEducation> EmployeeEducations { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeExperience> EmployeeExperiences { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeGroup> EmployeeGroups { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeHoliday> EmployeeHolidays { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeLanguage> EmployeeLanguages { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeLeaf> EmployeeLeaves { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeLeavesLog> EmployeeLeavesLogs { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeLoan> EmployeeLoans { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeOverTime> EmployeeOverTimes { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeePaper> EmployeePapers { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeShiftCheck> EmployeeShiftChecks { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeShiftDetail> EmployeeShiftDetails { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeShift> EmployeeShifts { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeTransaction> EmployeeTransactions { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeVacationLog> EmployeeVacationLogs { get; set; }
        [InverseProperty("Employee")]
        public virtual ICollection<EmployeeVacation> EmployeeVacations { get; set; }
    }
}